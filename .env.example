# Created by Vercel CLI
VERCEL="1"
VERCEL_ENV="development"
TURBO_REMOTE_ONLY="true"
VERCEL_URL=""
VERCEL_GIT_PROVIDER=""
VERCEL_GIT_PREVIOUS_SHA=""
VERCEL_GIT_REPO_SLUG=""
VERCEL_GIT_REPO_OWNER=""
VERCEL_GIT_REPO_ID=""
VERCEL_GIT_COMMIT_REF=""
VERCEL_GIT_COMMIT_SHA=""
VERCEL_GIT_COMMIT_MESSAGE=""
VERCEL_GIT_COMMIT_AUTHOR_LOGIN=""
VERCEL_GIT_COMMIT_AUTHOR_NAME=""
NEXT_PUBLIC_SANITY_PROJECT_ID=""
# see https://www.sanity.io/docs/api-versioning for how versioning works
NEXT_PUBLIC_SANITY_API_VERSION="2022-11-15"
SANITY_API_PROJECT_ID=""
SANITY_STUDIO_API_PROJECT_ID=""
NEXT_PUBLIC_SANITY_DATASET=""
SANITY_API_DATASET=""
SANITY_STUDIO_API_DATASET=""
SANITY_API_READ_TOKEN=""
# Optional, useful if you plan to add API functions that can write to your dataset your dataset
SANITY_API_WRITE_TOKEN=""
# Optional, can be used to change the Studio title in the navbar and differentiate between production and staging environments for your editors
NEXT_PUBLIC_SANITY_PROJECT_TITLE="food dude luke."

# Optional, check the comments in pages/api/revalidate.ts for instructions on how to set it up
SANITY_REVALIDATE_SECRET=

# If `/api/preview?slug` URLs don't have a `secret` search parameter then static rendering will still be optimistically enabled but without
# a `token` set. Instead, it'll check if the user have a valid Sanity session and have access to the project and dataset before any draft content is queried.
# You can turn this off by setting this env var to "true" and only valid secrets will be allowed to bypass static rendering and harden the security.
SANITY_REQUIRE_PREVIEW_SECRET=

# Instagram API
INSTA_API_URL=""
INSTA_API_KEY=""

# Cloudinary
NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=""
CLOUDINARY_API_KEY=""
CLOUDINARY_API_SECRET=""

MY_SECRET=""
MY_ADMIN_USERNAME=""